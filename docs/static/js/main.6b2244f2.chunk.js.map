{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifts.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","resp","fetch","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","console","log","then","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,qCACI,6CACA,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACFN,GAAe,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACvCJ,EAAc,KAOV,SACI,uBAAOK,KAAM,OAAOC,MAAQP,EAAYQ,SAjBhC,SAACL,GAEjBF,EAAcE,EAAEM,OAAOF,gB,kCCPlBG,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,sDAGdI,EAAOC,MAAMH,GAHC,SAIQE,EAJR,8BAIcE,OAJd,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAabM,GAba,4CAAH,sDCARO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAW,6CAAhB,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAfAC,qBAAU,WACNC,QAAQC,IAAIzB,GACZD,EAASC,GACR0B,MAAK,SAAAhB,GAEFiB,YAAW,WACPL,EAAS,CACLf,KAAMG,EACNU,SAAQ,MAEb,UAGR,CAACpB,IAEGqB,EDdwBO,CAAa5B,GAAhCa,EAJuB,EAI5BN,KAAaa,EAJe,EAIfA,QAEpB,OACI,qCAEI,mCAAMpB,EAAN,QACCoB,EAAU,mBAAGJ,UAAU,mCAAb,sBAA+D,+CAC1E,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACV,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBmB,IAAKnB,EAAIC,eEftCmB,EAAe,WAAM,MAIM1C,mBAAS,CAAC,cAJhB,mBAIvB2C,EAJuB,KAIX5C,EAJW,KAU9B,OACI,8BAEI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ4C,EAAWtB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAASA,SAAYA,GAAgBA,c,OClBjEgC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6b2244f2.chunk.js","sourcesContent":["import userEvent from '@testing-library/user-event'\r\nimport React, { useState } from 'react'\r\nimport Proptypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInput = (e) => {\r\n        \r\n        setInputValue(e.target.value);\r\n        \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories( cats => [inputValue, ...cats ] ) ;\r\n        setInputValue('');\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>AddCategory</h3>\r\n            <form onSubmit = {handleSubmit} >\r\n                <input type= \"text\" value= {inputValue} onChange = {handleInput} />\r\n                \r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: Proptypes.func.isRequired,\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getGifts = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=BDp6dyWwV7bQNEeTSeRUEnqVIKtNxQjl`;\r\n    const resp = fetch(url);\r\n    const {data} = await (await resp).json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    //console.log(id, title,url)\r\n    return (\r\n        <div className ='imagenes animate__animated animate__zoomIn'>\r\n            {/* {img.title} */}\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n ","import React from 'react'\r\nimport { getGifts } from '../Helpers/getGifts';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => { \r\n\r\n    // const [images, setImages] = useState([])\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            \r\n            <h3> {category}  </h3>\r\n            {loading ? <p className=\"animate__animated animate__flash\">cargando</p> : <p> melo caramelo</p>}\r\n            <div className=\"card-grid\">          \r\n            {\r\n                images.map(img => (\r\n                    <GifGridItem {...img} key={img.id}/>  \r\n                ))\r\n            }\r\n                            \r\n            </div>\r\n        </>\r\n         \r\n         \r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getGifts } from '../Helpers/getGifts';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n    useEffect(() => {\r\n        console.log(category)\r\n        getGifts(category)\r\n        .then(img => {\r\n            \r\n            setTimeout(() => {\r\n                setState({\r\n                    data: img,\r\n                    loading:false\r\n                })\r\n            }, 2000);\r\n            \r\n        });\r\n    }, [category]) \r\n\r\n    return state;\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    //const [catergories, setCategorias] = useState(['One Punch', 'Samurai X', 'Dragon Ball']);\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     //setCategories( [...categories,  'Naruto'] );\r\n    //     setCategories( cats => [...cats, 'Boruto'] ) ;\r\n    \r\n    return (\r\n        <div>\r\n            \r\n            <>\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategory setCategories = {setCategories} />\r\n                <hr />\r\n                    \r\n                <ol>\r\n                    {\r\n                        categories.map((category) => (\r\n                            <GifGrid category = {category} key= {category}/>\r\n                            \r\n                        ))\r\n                    }\r\n                </ol>\r\n\r\n            </>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}